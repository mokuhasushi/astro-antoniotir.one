---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ExperienceCard from '../../components/ExperienceCard.astro';

const allExperiences = (await getCollection('experiences'))
  .sort((a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf());

const tags = [...new Set(allExperiences.map(e => e.data.tags).flat())];
const tagCounts: { [key: string]: number} = {};

// Count posts per tag
allExperiences.forEach(e => {
  e.data.tags?.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// Sort tags alphabetically
const sortedTags = tags.sort((a, b) => a.localeCompare(b));
const base = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/';
const pageTitle = "Experience";
---
<BaseLayout pageTitle={pageTitle}>
  <p>Here you can find my relevant experience. Being flexible does not sound relevant to you? Are you only after work experiences? Feel free to filter based on what you are after!</p>

  <div class="page">
    <h1 class="posts-title">Tags</h1>
    
    <div class="tags-list">
      {sortedTags.map(tag => (
        <a href={`${base}experiences/${tag}/`} class="tag-item">
          <span class="tag-name">#{tag}</span>
          <span class="tag-count">({tagCounts[tag]})</span>
        </a>
      ))}
    </div>

    <div class="posts">
      <h1 class="posts-title">
        <span style="color: var(--foreground)">All experiences</span>
      </h1>
      {allExperiences.length === 0 ? (
        <p>No posts found with this tag.</p>
      ) : (
        allExperiences.map((e) => <ExperienceCard exp={e} />)
      )} 
    </div>
  

  </div>
</BaseLayout>

<style>
  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin: 40px;
  }
  
  .tag-item {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border: 2px solid var(--accent);
    text-decoration: none;
    transition: all 0.15s linear;
  }
  
  .tag-item:hover {
    background: color-mix(in srgb, var(--accent) 15%, transparent);
  }
  
  .tag-name {
    color: var(--accent);
    font-weight: 600;
  }
  
  .tag-count {
    color: color-mix(in srgb, var(--foreground) 65%, transparent);
    font-size: calc(var(--font-size) * 0.9);
  }
</style>